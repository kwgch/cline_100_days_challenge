; Description: clineのルール

- 同じファイルへの操作を2回失敗するならプランを再検討してください。
- memory-bankを適宜更新してください。
- README.mdを作成してください。
- ファイルが大きくなりそうなら分割を検討してください。
- 難易度選択を実装しました。
- ハイスコアを保存するようにしました。

# ロール定義
あなたの名前はclineです。

下記仕様に従って、アプリの開発を行います。

# ターゲットクリックゲーム 仕様書・アーキテクチャ設計書

## 仕様書

### 概要
ターゲットクリックゲームは、画面上にランダムに表示されるターゲットを素早くタップ/クリックするシンプルなゲームです。プレイヤーはタイムリミット内にできるだけ多くのターゲットをタップし、高スコアを目指します。

### 機能要件

#### 基本機能
1. **ゲーム開始画面**
   - スタートボタン
   - 難易度選択（簡単・普通・難しい）
   - ハイスコア表示

2. **ゲームプレイ画面**
   - ランダムな位置に表示されるターゲット
   - 残り時間表示
   - 現在のスコア表示
   - 一時停止ボタン

3. **ゲーム終了画面**
   - 最終スコア表示
   - 再プレイボタン
   - メインメニューに戻るボタン

#### ゲームルール
1. ゲーム時間は30秒
2. ターゲットをタップするとスコアが加算される
3. 難易度によってターゲットのサイズと出現速度が変化する
   - 簡単：大きなターゲット、ゆっくり移動
   - 普通：中サイズのターゲット、標準速度
   - 難しい：小さなターゲット、速く移動

#### データ保存
- ローカルストレージを使用してハイスコアを保存

### 非機能要件

#### 対応デバイス
- スマートフォン（iOS/Android）
- タブレット
- デスクトップPC（Windows/Mac）

#### パフォーマンス
- 60FPSのスムーズな動作
- タッチ/クリック時の即時レスポンス

#### 技術スタック
- HTML5
- CSS3
- JavaScript (ES6+)
- ローカルファイルのみで動作（外部ライブラリ不使用）

## アーキテクチャ設計書

### ファイル構成
```
target-click-game/
├── index.html          # メインHTMLファイル
├── css/
│   └── style.css       # スタイルシート
└── js/
    ├── main.js         # メインJavaScriptファイル
    ├── game.js         # ゲームロジック
    ├── target.js         # ターゲットクラス
    ├── ui.js         # UI管理
    └── storage.js      # ローカルストレージ操作
```

### コンポーネント設計

#### 1. ゲームマネージャー（GameManager）
- ゲームの状態管理（開始、一時停止、終了）
- 難易度設定の管理
- スコア計算
- タイマー管理

#### 2. ターゲット（Target）
- 位置、サイズ、速度の管理
- 表示/非表示の制御
- タップ/クリック判定

#### 3. UI管理（UIManager）
- 画面遷移の管理
- スコア、タイマーの表示更新
- ボタン操作の処理

#### 4. ストレージ管理（StorageManager）
- ハイスコアの保存/読み込み

### レスポンシブデザイン戦略
- ビューポート設定で画面サイズに適応
- メディアクエリによる要素サイズの調整
- タッチとマウスの両方のイベントをサポート
- 画面サイズに応じたターゲットサイズの調整

### データフロー
1. ユーザーがゲームを開始
2. GameManagerがゲーム状態を初期化
3. UIManagerが画面を更新
4. GameManagerがTargetを生成・管理
5. ユーザーがターゲットをタップ/クリック
6. GameManagerがスコアを更新
7. UIManagerがスコア表示を更新
8. タイマー終了時、GameManagerがゲーム終了を通知
9. UIManagerが結果画面を表示
10. StorageManagerがハイスコアを保存

### イベント処理
- タッチイベント（touchstart, touchend）
- マウスイベント（mousedown, mouseup）
- 画面サイズ変更イベント（resize）
- ゲーム状態変更イベント（カスタムイベント）

### パフォーマンス最適化
- requestAnimationFrameを使用したアニメーション
- イベントリスナーの適切な管理（追加と削除）
- 不要なDOM操作の最小化
- キャンバス描画の最適化

### セキュリティ考慮事項
- ローカルストレージ使用時のデータ検証
- イベントハンドラでの入力検証

この設計に基づいて、Clineに実装を指示することで、スマートフォンとPCの両方で動作する、ローカルファイルのみのターゲットクリックゲームを作成できます。
